name: Deploy SOPA Frontend

on:
  push:
    branches:
      - feat/devops
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: feat/devops

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Crear archivo de clave privada
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Verificar que la clave se cre√≥ correctamente
          if [ ! -s ~/.ssh/id_rsa ]; then
            echo "‚ùå Error: SSH private key is empty or not found"
            exit 1
          fi
          
          # Agregar host a known_hosts
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          
          # Verificar que el host se agreg√≥
          if [ ! -s ~/.ssh/known_hosts ]; then
            echo "‚ùå Error: Failed to add host to known_hosts"
            exit 1
          fi
          
          echo "‚úÖ SSH setup completed successfully"

      - name: Test SSH connection
        run: |
          ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo '‚úÖ SSH connection successful'"

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            
            echo "üöÄ Starting deployment from feat/devops branch..."
            
            # Navigate to project directory
            cd ~/sopa-front
            
            # Pull latest changes from feat/devops
            echo "üì• Pulling latest changes from feat/devops..."
            git fetch origin
            git checkout feat/devops
            git reset --hard origin/feat/devops
            
            # Stop existing containers
            echo "üõë Stopping existing containers..."
            docker compose down --remove-orphans || true
            
            # Build and start containers
            echo "üî® Building and starting containers..."
            docker compose up -d --build
            
            # Wait for containers to be ready
            echo "‚è≥ Waiting for containers to start..."
            sleep 30
            
            # Check container status
            echo "‚úÖ Checking container status..."
            docker compose ps
            
            # Clean up unused resources
            echo "üßπ Cleaning up Docker resources..."
            docker image prune -f
            
            echo "üéâ Deployment from feat/devops completed successfully!"
            echo "üåê Frontend available at: http://192.168.30.114:3000"
          EOF

      - name: Verify deployment
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ~/sopa-front
            
            # Check if containers are running
            if docker compose ps | grep -q "Up"; then
              echo "‚úÖ Containers are running successfully"
              docker compose ps
            else
              echo "‚ùå Containers failed to start"
              docker compose logs --tail=50
              exit 1
            fi
          EOF

      - name: Cleanup SSH
        if: always()
        run: |
          rm -rf ~/.ssh/id_rsa
